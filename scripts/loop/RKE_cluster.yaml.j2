---
cluster_name: gelcluster
#kubernetes_version: v1.17.2-rancher1-2
kubernetes_version: v1.18.6-rancher1-2

services:
  kube-api:
    # Expose a different port range for NodePort services
    service_node_port_range: 80-32767
  kube-controller:
    extra_args:
      cluster-signing-cert-file: /etc/kubernetes/ssl/kube-ca.pem
      cluster-signing-key-file: /etc/kubernetes/ssl/kube-ca-key.pem

# Currently, only authentication strategy supported is x509.
# You can optionally create additional SANs (hostnames or IPs) to
# add to the API server PKI certificate.
# This is useful if you want to use a load balancer for the
# control plane servers.

## This allows me to create a config file that works with the FQDNs.

authentication:
    strategy: x509
    sans:
      - "*.race.sas.com"

# Kubernetes Authorization mode
# Use `mode: rbac` to enable RBAC
# Use `mode: none` to disable authorization
authorization:
    mode: rbac

# Currently only nginx ingress provider is supported.
# To disable ingress controller, set `provider: none`
# `node_selector` controls ingress placement and is optional
ingress:
    provider: none
    # node_selector:
    #   app: ingress

# addon_job_timeout: 60

# # All add-on manifests MUST specify a namespace
# addons: |-
#     ---
#     apiVersion: v1
#     kind: Pod
#     metadata:
#       name: my-nginx
#       namespace: default
#     spec:
#       containers:
#       - name: my-nginx
#         image: nginx
#         ports:
#         - containerPort: 80

# addons_include:
#     - https://raw.githubusercontent.com/rook/rook/master/cluster/examples/kubernetes/rook-operator.yaml
#     - https://raw.githubusercontent.com/rook/rook/master/cluster/examples/kubernetes/rook-cluster.yaml

nodes:
  - address: intnode01
    internal_address: 192.168.6.1
    user: cloud-user
    role:
      - controlplane
      - etcd
      - worker
  - address: intnode02
    internal_address: 192.168.6.2
    user: cloud-user
    role:
      - controlplane
      - etcd
      - worker
  - address: intnode03
    internal_address: 192.168.6.3
    user: cloud-user
    role:
      - controlplane
      - etcd
      - worker

{#{ hostvars[item]['ansible_facts'] }} {{ item }#}
{% for host in groups['sasnodes'] %}
{% set tunnel_ip =  hostvars[host]['ansible_tun1']['ipv4']['address']  %}
{% set ip_last_digit = tunnel_ip.split('.')[-1]  %}
{% set ip_last_digit_leading = ip_last_digit.zfill(2) %}
{% if ip_last_digit|int > 3 %}
## auto-generated based on size of collection
  - address: intnode{{ip_last_digit_leading}}
    internal_address: {{ tunnel_ip }}
    user: cloud-user
    role:
      - worker
{% endif %}
{% endfor %}